@model Gadi.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <title>GadiSeekho | Register</title>
    <!-- Favicon-->
    <link rel="icon" href="../../favicon.ico" type="image/x-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,700&subset=latin,cyrillic-ext" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" type="text/css">
    <!-- Bootstrap Core Css -->
    <link href="~/bower_components/adminbsb-materialdesign/plugins/bootstrap/css/bootstrap.css" rel="stylesheet" />

    <!-- Waves Effect Css -->
    <link href="~/bower_components/adminbsb-materialdesign/plugins/node-waves/waves.css" rel="stylesheet" />

    <!-- Animation Css -->
    <link href="~/bower_components/adminbsb-materialdesign/plugins/animate-css/animate.css" rel="stylesheet" />
    <!-- Custom Css -->
    <link href="~/bower_components/adminbsb-materialdesign/css/style.css" rel="stylesheet" />
</head>

<body class="signup-page">
    <div ng-cloak class="signup-box" ng-app="Gadi">
        <div class="logo">
            <a href="javascript:void(0);"><b></b></a>
            <small>@*Admin BootStrap Based - Material Design*@</small>
        </div>
        <div class="card" ng-controller="RegisterController as model" ng-init="model.initialise('@Model.HasError.ToString().ToLower()','@Model.MobileNumber','@Model.Email','@Model.IsDrivingSchool.ToString().ToLower()')">
            <div class="body">
                @using (Html.BeginForm(new { @class = "form-horizontal", role = "form", id = "sign_up" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group alert alert-danger" ng-if="@Model.HasError.ToString().ToLower() && !model.errorMessages.length>0">
                        @Html.ValidationSummary(false, null, new { @class = "" })
                    </div>
                    <div class="alert alert-danger alert-dismissable" ng-if="model.errorMessages.length>0">
                        <ul>
                            <li ng-repeat="message in model.errorMessages track by $index"><span ng-bind="message"></span></li>
                        </ul>
                    </div>
                    <div class="msg">Register a new membership</div>
                    <div class="body">
                        <!-- Nav tabs -->
                        <ul class="nav nav-tabs" role="tablist">
                            <li role="presentation" class="active">
                                <a href="#student_with_icon_title" data-toggle="tab">
                                    <i class="material-icons">face</i> Student
                                </a>
                            </li>
                            <li role="presentation">
                                <a href="#drivingschool_with_icon_title" data-toggle="tab">
                                    <i class="material-icons">directions_car</i> Driving School
                                </a>
                            </li>
                        </ul>
                        <!-- Tab panes -->
                        <div class="tab-content">
                        <!-- Start Of Student -->
                        <div role="tabpanel" class="tab-pane fade in active" id="student_with_icon_title">
                            <div class="row clearfix">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="col-lg-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">person</i>
                                            </span>
                                            <div class="form-line">
                                                @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">person</i>
                                            </span>
                                            <div class="form-line">
                                                @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                                                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">person</i>
                                            </span>
                                            <div class="form-line">
                                                @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                                @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control", @placeholder = "Pincode" })
                                                @Html.ValidationMessageFor(m => m.Pincode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">person</i>
                                            </span>
                                            <div class="form-line">
                                                @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <i class="material-icons">person</i>
                                            </span>
                                            <div class="form-line">
                                                @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                                @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control", @placeholder = "Mobile Number" })
                                                @Html.ValidationMessageFor(m => m.MobileNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group" ng-if="model.isOtpCreated==true">
                                            <span class="input-group-addon">
                                                <i class="material-icons">textsms</i>
                                            </span>
                                            <div class="form-line">
                                                @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                                @Html.TextBoxFor(m => m.OTP, new { @class = "form-control", @placeholder = "OTP", @ng_model = "model.OTP" })
                                                @Html.ValidationMessageFor(m => m.OTP, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group" ng-if="model.isOtpCreated==true">
                                            <span class="input-group-addon">
                                                <i class="material-icons">lock</i>
                                            </span>
                                            <div class="form-line">
                                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                                @*<input type="password" class="form-control" name="password" minlength="6" placeholder="Password" required>*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="input-group" ng-if="model.isOtpCreated==true">
                                            <span class="input-group-addon">
                                                <i class="material-icons">lock</i>
                                            </span>
                                            <div class="form-line">
                                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "ConfirmPassword" })
                                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                                @*<input type="password" class="form-control" name="confirm" minlength="6" placeholder="Confirm Password" required>*@
                                            </div>
                                        </div>
                                    </div>
                                    <p class="text-muted text-left">
                                        <a ng-if="model.isOtpCreated==true" ng-click="model.createLoginOtp(model.mobileNumber)">&nbsp;&nbsp;&nbsp; ReSend OTP</a>
                                    </p>
                                    <button ng-if="!(model.isOtpCreated==true)" type="button" ng-click="model.createLoginOtp(model.mobileNumber)" class="btn btn-block btn-lg bg-pink waves-effect">Next</button>
                                    <button ng-if="model.isOtpCreated==true" type="submit" class="btn btn-block btn-lg bg-pink waves-effect">Register</button>
                                    <div class="m-t-25 m-b--5 align-center">
                                        @*<a href="sign-in.html">You already have a membership?</a>*@
                                        <a href="@Url.Action("Login", "Account")">You already have a membership?</a>
                                    </div>
                                    <input type="hidden" name="Latitude" value="{{model.latitude}}" />
                                    <input type="hidden" name="Longitude" value="{{model.longitude}}" />
                                </div>
                            </div>
                        </div>
                        <!-- End Of Student -->
                        <!-- Start Of Driving School -->
                        <div role="tabpanel" class="tab-pane fade" id="drivingschool_with_icon_title">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control", @placeholder = "Mobile Number", @ng_model = "model.mobileNumber" })
                                    @Html.ValidationMessageFor(m => m.MobileNumber, "", new { @class = "text-danger" })
                                    @*<input type="text" class="form-control" name="namesurname" placeholder="Name Surname" required autofocus>*@
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">email</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email", @ng_model = "model.email" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isOtpCreated==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">textsms</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.OTP, new { @class = "form-control", @placeholder = "OTP", @ng_model = "model.OTP" })
                                    @Html.ValidationMessageFor(m => m.OTP, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isOtpCreated==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">lock</i>
                                </span>
                                <div class="form-line">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    @*<input type="password" class="form-control" name="password" minlength="6" placeholder="Password" required>*@
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isOtpCreated==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">lock</i>
                                </span>
                                <div class="form-line">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "ConfirmPassword" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                    @*<input type="password" class="form-control" name="confirm" minlength="6" placeholder="Confirm Password" required>*@
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true && model.isOtpCreated==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">location_on</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control", @placeholder = "Pincode", ng_model = "model.pinCode" })
                                    @Html.ValidationMessageFor(m => m.Pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="form-group">*@

                            @*</div>*@
                            <p class="text-muted text-left">
                                <small>
                                    <a ng-if="model.isDrivingSchool==true && model.isOtpCreated==true" ng-click="model.addPincode();" id="findZipCode">&nbsp;&nbsp;&nbsp; Get pincode from current location</a>
                                </small>
                            </p>
                            <p class="text-muted text-left">
                                <a ng-if="model.isOtpCreated==true" ng-click="model.createLoginOtp(model.mobileNumber)">&nbsp;&nbsp;&nbsp; ReSend OTP</a>
                            </p>
                            <input type="checkbox" name="IsDrivingSchoolCheckbox" id="IsDrivingSchoolChkbox" class="filled-in chk-col-pink" ng-change="model.onDrivingSchoolChecked()" , ng-model="model.isDrivingSchool">
                            <label for="IsDrivingSchoolChkbox">Driving School</label>
                            <input name="IsDrivingSchool" type="hidden" value="{{model.isDrivingSchool}}" />
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Name, new { @class = "form-control", @placeholder = "Driving School Name" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Address1, new { @class = "form-control", @placeholder = "Address Line 1" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Address2, new { @class = "form-control", @placeholder = "Address Line 2" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Address2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Address3, new { @class = "form-control", @placeholder = "Address Line 3" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Address3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Address4, new { @class = "form-control", @placeholder = "Address Line 4" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Address4, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Pincode, new { @class = "form-control", @placeholder = "Pincode" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.Telephone, new { @class = "form-control", @placeholder = "Landline Number" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.Telephone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.MinimumFeeWithLicense, new { @class = "form-control", @placeholder = "Minimum Fees With License" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.MinimumFeeWithLicense, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="input-group" ng-if="model.isDrivingSchool==true">
                                <span class="input-group-addon">
                                    <i class="material-icons">person</i>
                                </span>
                                <div class="form-line">
                                    @*<input type="email" class="form-control" name="email" placeholder="Email Address" required>*@
                                    @Html.TextBoxFor(m => m.DrivingSchool.MinimumFeeWithOutLicense, new { @class = "form-control", @placeholder = "Minimum Fees Without License" })
                                    @Html.ValidationMessageFor(m => m.DrivingSchool.MinimumFeeWithOutLicense, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="input-group">
                                        <span class="input-group-addon">
                                            <i class="material-icons">drive_eta</i>
                                        </span>
                                        @Html.CheckBoxFor(m => m.IsDrivingSchool, new { @class = "filled-in chk-col-orange", ng_change = "model.onDrivingSchoolChecked()", ng_model = "model.isDrivingSchool", name = "terms", id = "terms", type = "checkbox" })
                                        @Html.ValidationMessageFor(m => m.IsDrivingSchool, "", new { @class = "text-danger" })
                                        <label> Driving School</label>
                                    </div>*@
                            <button ng-if="!(model.isOtpCreated==true)" type="button" ng-click="model.createLoginOtp(model.mobileNumber)" class="btn btn-block btn-lg bg-pink waves-effect">Next</button>
                            <button ng-if="model.isOtpCreated==true" type="submit" class="btn btn-block btn-lg bg-pink waves-effect">Register</button>

                            <p class="text-muted text-center">
                                <small>Already have an account?</small>
                            </p>
                            <div class="m-t-25 m-b--5 align-center">
                                @*<a href="sign-in.html">You already have a membership?</a>*@
                                <a href="@Url.Action("Login", "Account")">You already have a membership?</a>
                            </div>
                            <input type="hidden" name="Latitude" value="{{model.latitude}}" />
                            <input type="hidden" name="Longitude" value="{{model.longitude}}" />
                            @*<button class="btn btn-block btn-lg bg-pink waves-effect" type="submit">SIGN UP</button>*@
                        </div>
                        <!-- End Of Driving School -->
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Jquery Core Js -->
    <script src="~/bower_components/adminbsb-materialdesign/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap Core Js -->
    <script src="~/bower_components/adminbsb-materialdesign/plugins/bootstrap/js/bootstrap.js"></script>
    <!-- Waves Effect Plugin Js -->
    <script src="~/bower_components/adminbsb-materialdesign/plugins/node-waves/waves.js"></script>
    <!-- Validation Plugin Js -->
    <script src="~/bower_components/adminbsb-materialdesign/plugins/jquery-validation/jquery.validate.js"></script>

    <!-- Custom Js -->
    <script src="~/bower_components/adminbsb-materialdesign/js/admin.js"></script>
    <script src="~/bower_components/adminbsb-materialdesign/js/pages/examples/sign-in.js"></script>
</body>

</html>
@Scripts.Render("~/Scripts/bower")
@Scripts.Render("~/Scripts/Application")